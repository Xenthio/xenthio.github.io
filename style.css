

/* Apply this to your `table` element. */
#page {
   border-collapse: collapse;
}

/* And this to your table's `td` elements. */
#page td {
   padding: 0;
   margin: 0;
}

.page-break {
  page-break-after: always;
  height: 0;
  display: block;  // optional. must be sure it is block item in document flow
  clear: both;   // optional. use only if you are using float
}

html {
  scroll-behavior: smooth;
  max-height: 100vh;
  overflow-x: initial !important;
}

body {
  background-color: #000;
  max-height: 100vh;
  overflow-y: hidden;
}



header {
  position: sticky; 
  top: 0;
  width: 100%;
  height: 0px;
   background-color: #FFF;
}

.footer {
	bottom: 0;
	background-color: #010312;
	text-align: center;
	font-family: Roboto, Arial, sans-serif;
  padding: 0;
  margin: 0;
}



.round {
	  box-shadow: 0px 0px 8px #171c2b;
	  margin-top: 5px;

  	display: flex;
    border-top-right-radius:4px;
    border-top-left-radius:4px;
    border-bottom-right-radius:4px;
    border-bottom-left-radius:4px;
    float: right;
  	overflow: hidden;
    margin-right: 32px;
}

@keyframes fadein {
    from { text-shadow: 0 0 32px #b5e9f5, 0 0 16px #b5e9f5, 0 0 8px #b5e9f5, 0 0 4px #b5e9f5,  0 0 2px #b5e9f5; }
    to   { text-shadow: 0 0 8px #b5e9f5, 0 0 4px #b5e9f5, 0 0 2px #b5e9f5;; }
}

.splash {
	animation: fadein 2s;
	/*transition: text-shadow 0.2s ease;*/
	font-size: 50px;
	color: white;
	text-align: center;
	font-family: Roboto, Arial, sans-serif;
	text-shadow: 0 0 8px #b5e9f5, 0 0 4px #b5e9f5, 0 0 2px #b5e9f5;;
	padding-left: 50px;
	padding-right: 50px;
	padding-top: 180px;
	padding-bottom: 180px;

}

.content {
  color: white;
  background-color: #03011a;
  text-align: center;
  font-size: 20px;
  font-family: Roboto, Arial, sans-serif;
  padding-top: 64px;
  padding-bottom: 256px;
}

ul {
  position: sticky; 
  top: 0;
  -webkit-backdrop-filter: blur(10px);
  backdrop-filter: blur(10px);
  vertical-align: middle;
  /*display: block;*/
  list-style-type: none;
  margin: 0;
  padding-left: 0;
  padding-right: 0;
  width: 100%;
  height: 40px;
  background-color: #002266; /*#03011a;*/
  z-index: 1;
  overflow: visible;

}

li {
  margin: 0;
  padding: 0;
}

li a {
  transition: background-color 3s ease;
  transition: text-shadow 0.2s ease;
	font-size: 10px;
	font-family: Roboto, Arial, sans-serif;
  display: block;
  background-color: #171c2b;
  color: white;
  padding: 8px 16px;

  float: right;
  text-decoration: none;
}

.button {
  transition: background-color 3s ease;
  transition: text-shadow 0.2s ease;
  font-size: 12px;
  font-family: Roboto, Arial, sans-serif;
  display: block;
  background-color: #171c2b;
  color: white;
  padding: 8px 16px;
  float: inherit;
  margin-left: 50px;
  margin-right: 50px;
  text-decoration: none;
  border-top-right-radius:4px;
  border-top-left-radius:4px;
  border-bottom-right-radius:4px;
  border-bottom-left-radius:4px;
  display: inline-block;
}

.button:hover {
  transition: background-color 1s ease;
  transition: text-shadow 0.2s ease;
  background-color: #0e1024;
  color: white;
  text-shadow: 0 0 10px #cfe1ff;
}

li b {
	font-size: 20px;
	font-family: Roboto, Arial, sans-serif;
  display: block;
  width: 30%;
  color: #b5e9f5;
  margin-left: 32px;

  padding-top: 8px;
  text-decoration: none;

  float: left;
  text-shadow: 0 0 4px #b5e9f5;
}

li c {

  font-size: 20px;
  font-family: Roboto, Arial, sans-serif;
  display: block;
  width: 8px;
  color: #b5e9f5;
  margin-left: 32px;

  padding-top: 8px;
  text-decoration: none;

  float: left;
  text-shadow: 0 0 4px #b5e9f5;
}

li a.active {
  background-color: #2a5e7a;
  color: white;
}

li a:hover:not(.active) {
  transition: background-color 1s ease;
  transition: text-shadow 0.2s ease;
  background-color: #0e1024;
  color: white;
  text-shadow: 0 0 10px #cfe1ff;
}

li a:hover {
  transition: background-color 1s ease;
  transition: text-shadow 0.2s ease;
  background-color: #013c52;
  color: white;
  text-shadow: 0 0 10px #cfe1ff;
}

section {
  padding: 0;
  margin: 0;
}
div {

  padding: 0;
  margin: 0;
  overflow-y: hidden;
  color: white;
  font-family: Roboto, Arial, sans-serif;
}

body {
	display: flex;
	flex-direction: column;
	background-color: #000;
	width: 100%;
	height: 100vh;
	padding: 0;
	margin: 0;
  
}

.wrapper {
  transform-style: preserve-3d;
  /* The height needs to be set to a fixed value for the effect to work.
   * 100vh is the full height of the viewport. */
  height: 100vh;
  /* The scaling of the images would add a horizontal scrollbar, so disable x overflow. */
  overflow-x: hidden;
  /* Enable scrolling on the page. */
  overflow-y: show;
  /* Set the perspective to 2px. This is essentailly the simulated distance from the viewport to transformed objects.*/
  perspective: 2px;
}

.break {
	height: 500px;
}

.section {
  transform-style: preserve-3d;
  /* Needed for children to be absolutely positioned relative to the parent. */
  position: relative;
  /* The height of the container. Must be set, but it doesn't really matter what the value is. */
  height: 432px;

  /* For text formatting. */
  display: flex;
  align-items: center;
  justify-content: center;
  color: white;
  text-shadow: 0 0 5px #000;
}

.banner {
  transform-style: preserve-3d;
  /* Needed for children to be absolutely positioned relative to the parent. */
  position: relative;
  /* The height of the container. Must be set, but it doesn't really matter what the value is. */
  height: 300px;

  /* For text formatting. */
  display: flex;
  align-items: center;
  justify-content: center;
  color: white;
  text-shadow: 0 0 5px #000;
}



.parallax::after {
  transform-style: preserve-3d;
  /* Display and position the pseudo-element */
  content: " ";
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;

  /* Move the pseudo-element back away from the camera,
   * then scale it back up to fill the viewport.
   * Because the pseudo-element is further away, it appears to move more slowly, like in real life. */
  transform: translateZ(-1px) scale(2);
  /* Force the background image to fill the whole element. */
  background-size: 100%;
  /* Keep the image from overlapping sibling elements. */
  z-index: -1;

}


.static {
  -webkit-backdrop-filter: blur(10px);
  backdrop-filter: blur(10px);
	clear: both;
  background: rgba(35, 35, 71, 0.42);
  transform-style: preserve-3d;
	overflow-y: show;
	z-index: 1;
}

.header {
  transform-style: preserve-3d;
	position: sticky;
  color: white;
  overflow-y: hidden;
  background-color: rgba(0, 0, 0, 0);
  height: 40px;
  z-index: 1;
}

.content {
  color: white;
	position: relative;
  overflow-y: hidden;
  text-align: center;
  padding-top: 64px;
  padding-bottom: 64px;
}


.bg1::after {
  background-image: url('assets/main.jpg');
}

.bg2::after {
  background-image: url('assets/xScript.png');
}
.bg3::after {
  background-image: url('assets/DungeonCli.png');
}
